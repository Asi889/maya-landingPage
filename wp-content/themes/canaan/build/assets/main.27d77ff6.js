!function(e=".",o="__import__"){try{self[o]=new Function("u","return import(u)")}catch(t){const n=new URL(e,location),r=e=>{URL.revokeObjectURL(e.src),e.remove()};self[o]=e=>new Promise(((t,l)=>{const s=new URL(e,n);if(self[o].moduleMap[s])return t(self[o].moduleMap[s]);const c=new Blob([`import * as m from '${s}';`,`${o}.moduleMap['${s}']=m;`],{type:"text/javascript"}),d=Object.assign(document.createElement("script"),{type:"module",src:URL.createObjectURL(c),onerror(){l(new Error(`Failed to import: ${e}`)),r(d)},onload(){t(self[o].moduleMap[s]),r(d)}});document.head.appendChild(d)})),self[o].moduleMap={}}}("/assets/");const e=[];window.addEventListener("load",(function(){document.documentElement.style.setProperty("--full-height",`${window.innerHeight}px`);new ResizeObserver((e=>document.documentElement.style.setProperty("--full-height",`${window.innerHeight}px`))).observe(document.body),console.log("asdad ,load")})),window.addEventListener("DOMContentLoaded",(function(){e.forEach((e=>{null!==document.querySelector(e.selector)&&document.querySelectorAll(e.selector).forEach((o=>new e.Class(o,e.options)))}))}));
